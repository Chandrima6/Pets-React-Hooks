eslint rc file rules
0 => off
1 => warn
2 => error

HOOKS:
react "useState" hooks: alternative way of maintaining state
can't be used inside if / for loops
Class component can't have hooks
useEffect is not run initially, it is registered but called only after the component renders. Also how many times it is called depends on the state properties it is depending on. We should add the dependencies in an array in the use effect. If useEffect needs to run only once we have to provide [] as it does not have any dependency. If useEffect returns a function that means that function is a clean up function and it will be run once the component un mounts.

useContext + useReducer => meets the purpose of redux
Reducer function is which takes an old state , an action and returns the new state. It is easy to test.

JSX:
underlying all JSX converted to React.createElement



Generic Notes:

get a derived state => passing a property to a child component from parent as state and if we want to interact with a portion of that property data use static method getDerivedStateFromProps

arrow function dont create new context so this will refer to the component but normal functions create new context so have to bind this to the function. whenever passing functions to child component and using event handlers use arrow function to make sure this refers to the current component. lifecycle methods, render will always have current context of this.

+ converts any string to number

Branches:
master: typescript + react - redux
vanilla-js-code: vanilla js + react -redux
react-redux: vanilla js + react + redux
